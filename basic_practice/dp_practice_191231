#include <iostream>
#include <vector>
#include <cstdlib>
using namespace std;
template<class T> inline bool chmax(T& a, T b){if (a<b) {a=b; return 1;} return 0;}
template<class T> inline bool chmin(T& a, T b){if (a>b) {a=b; return 1;} return 0;}

const long long INF = 1LL << 60;

int N;
long long h[100010];
long long dp[10010];

int main() {
  cin >> N;
  for (int i = 0; i < N; ++i) cin >> h[i];

  for (int i = 0; i < N; ++i) dp[i] = INF;

  dp[0] = 0;

  for (int i = 0; i < N; ++i) {
    chmin(dp[i], dp[i-1] + abs(h[i] - h[i - 1]));
    if (i > 1) chmin(dp[i], dp[i-1] + abs(h[i] - h[i] - h[i - 2]));
  }
  cout << dp[N-1] << endl;
}

#include <iostream>
#include <vector>
#include <cstdlib>
typedef long long ll;
using namespace std;
template<class T> inline bool chmax(T& a, T b){if (a<b) {a=b; return 1;} return 0;}
template<class T> inline bool chmin(T& a, T b}{if (a>b) {a=b; return 1;} return 0;}

const ll INF = 1LL << 60;

int N;
ll h[10010];
ll dp[10010];

int main() {
  int N, K; cin >> N >> K;
  for (int i = 0; i < N; ++i) cin >> h[i];
  for (int i = 0; i < 10010; ++i) dp[i] = INF;
  dp[0] = 0;

  for (int i = 1; i < N; ++i) {
    for (int j = 1; j <= K; ++j) {
      chmin(dp[i + j], dp[i] + abs(h[i] - h[i + j]));
    }
  }
  cout << dp[N-1] << endl;
}



